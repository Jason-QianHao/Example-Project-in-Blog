<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="com.jason.component.JwtAuthenticationTokenFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="com.jason.dao.UserRepository"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="com.jason.feign.TestFeign"/>
    <fullyQualifiedTypeName name="com.jason.SpringCloudAlibabaConsumerApplication"/>
    <fullyQualifiedTypeName name="com.alibaba.dubbo.config.spring.context.annotation.EnableDubbo"/>
    <fullyQualifiedTypeName name="org.apache.dubbo.config.spring.context.annotation.EnableDubboConfig"/>
    <fullyQualifiedTypeName name="org.apache.dubbo.config.spring.context.annotation.EnableDubbo"/>
    <fullyQualifiedTypeName name="com.alibaba.dubbo.config.annotation.Service"/>
    <fullyQualifiedTypeName name="com.alibaba.dubbo.config.spring.context.annotation.EnableDubboConfig"/>
    <fullyQualifiedTypeName name="com.alibaba.dubbo.config.annotation.Reference"/>
    <fullyQualifiedTypeName name="com.alibaba.dubbo.spring.boot.annotation.EnableDubboConfiguration"/>
    <fullyQualifiedTypeName name="org.apache.dubbo.config.annotation.Service"/>
    <fullyQualifiedTypeName name="com.jason.service.TestService"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.apache.dubbo.config.annotation.Reference"/>
    <fullyQualifiedTypeName name="com.jason.api.DubboApi"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.client.discovery.EnableDiscoveryClient"/>
    <fullyQualifiedTypeName name="java.io.Serializable"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.UserDetailsService"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="com.jason.domain.User"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.AuthorityUtils"/>
    <fullyQualifiedTypeName name="org.springframework.core.annotation.Order"/>
    <fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.SpringBootApplication"/>
    <fullyQualifiedTypeName name="org.springframework.boot.SpringApplication"/>
    <fullyQualifiedTypeName name="com.jason.SpringSecurityOAuth2Application"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="com.alibaba.fastjson.JSON"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.Authentication"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configurers.ResourceServerSecurityConfigurer"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer"/>
    <fullyQualifiedTypeName name="org.springframework.data.redis.connection.RedisConnectionFactory"/>
    <fullyQualifiedTypeName name="org.springframework.security.oauth2.provider.token.store.redis.RedisTokenStore"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.userdetails.User"/>
    <fullyQualifiedTypeName name="org.junit.Test"/>
    <fullyQualifiedTypeName name="java.io.File"/>
    <fullyQualifiedTypeName name="org.apache.commons.io.FileUtils"/>
</qualifiedTypeNameHistroy>
